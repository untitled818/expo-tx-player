apply plugin: 'com.android.library'

group = 'expo.modules.txplayer'
version = '0.1.0'

// 引入 Expo modules core 插件
def expoModulesCorePlugin = new File(project(":expo-modules-core").projectDir.absolutePath, "ExpoModulesCorePlugin.gradle")
apply from: expoModulesCorePlugin
applyKotlinExpoModulesCorePlugin()
useCoreDependencies()
useExpoPublishing()

// SDK 版本配置（不需要重复声明 android 块）
def useManagedAndroidSdkVersions = false
if (useManagedAndroidSdkVersions) {
  useDefaultAndroidSdkVersions()
} else {
  buildscript {
    ext.safeExtGet = { prop, fallback ->
      rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
    }
  }
}

android {
  compileSdkVersion safeExtGet("compileSdkVersion", 34)

  namespace "expo.modules.txplayer"

  defaultConfig {
    minSdkVersion safeExtGet("minSdkVersion", 21)
    targetSdkVersion safeExtGet("targetSdkVersion", 34)

    versionCode 1
    versionName "0.1.0"

    ndk {
      abiFilters "armeabi", "armeabi-v7a", "arm64-v8a"
    }
  }

  lintOptions {
    abortOnError false
  }

  packagingOptions {
    exclude "lib/armeabi/libijkhlscache-master.so"
    exclude "lib/armeabi-v7a/libijkhlscache-master.so"
    exclude "lib/arm64-v8a/libijkhlscache-master.so"
  }

  sourceSets {
    main {
      java.srcDirs = ['src/main/java']
      res.srcDirs = ['src/main/res']
      manifest.srcFile 'src/main/AndroidManifest.xml'
    }
  }
}

// 依赖
dependencies {
  implementation 'com.tencent.liteav:LiteAVSDK_Player:12.5.0.17567'

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'androidx.exifinterface:exifinterface:1.2.0'
    implementation 'androidx.vectordrawable:vectordrawable-animated:1.1.0'

  implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
  implementation 'com.github.bilibili:DanmakuFlameMaster:0.9.25'
}